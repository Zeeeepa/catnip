basePath: /v1
definitions:
  github_com_vanpelt_catnip_internal_models.ClaudeSessionSummary:
    description: Claude Code session summary with metrics and timing information
    properties:
      currentSessionId:
        example: xyz789-ghi012
        type: string
      isActive:
        example: true
        type: boolean
      lastCost:
        description: Metrics (from completed sessions)
        example: 0.25
        type: number
      lastDuration:
        example: 3600
        type: integer
      lastSessionId:
        example: abc123-def456
        type: string
      lastTotalInputTokens:
        example: 15000
        type: integer
      lastTotalOutputTokens:
        example: 8500
        type: integer
      sessionEndTime:
        example: "2024-01-15T16:45:30Z"
        type: string
      sessionStartTime:
        example: "2024-01-15T14:30:00Z"
        type: string
      turnCount:
        example: 15
        type: integer
      worktreePath:
        example: /workspace/my-project
        type: string
    type: object
  github_com_vanpelt_catnip_internal_models.GitStatus:
    description: Current git status including active worktree and repository information
    properties:
      active_worktree:
        $ref: '#/definitions/github_com_vanpelt_catnip_internal_models.Worktree'
      repositories:
        additionalProperties:
          $ref: '#/definitions/github_com_vanpelt_catnip_internal_models.Repository'
        type: object
      repository:
        $ref: '#/definitions/github_com_vanpelt_catnip_internal_models.Repository'
      worktree_count:
        example: 3
        type: integer
    type: object
  github_com_vanpelt_catnip_internal_models.Repository:
    description: Git repository information and metadata
    properties:
      created_at:
        example: "2024-01-15T10:30:00Z"
        type: string
      default_branch:
        example: main
        type: string
      id:
        example: anthropics/claude-code
        type: string
      last_accessed:
        example: "2024-01-15T16:45:30Z"
        type: string
      path:
        example: /workspace/repos/anthropics_claude-code.git
        type: string
      url:
        example: https://github.com/anthropics/claude-code
        type: string
    type: object
  github_com_vanpelt_catnip_internal_models.Worktree:
    description: Git worktree with branch and status information
    properties:
      branch:
        example: feature/api-docs
        type: string
      commit_count:
        example: 3
        type: integer
      commit_hash:
        example: abc123def456
        type: string
      commits_behind:
        example: 2
        type: integer
      created_at:
        example: "2024-01-15T14:00:00Z"
        type: string
      id:
        example: abc123-def456-ghi789
        type: string
      is_dirty:
        example: true
        type: boolean
      last_accessed:
        example: "2024-01-15T16:30:00Z"
        type: string
      name:
        example: feature-api-docs
        type: string
      path:
        example: /workspace/worktrees/feature-api-docs
        type: string
      repo_id:
        example: anthropics/claude-code
        type: string
      source_branch:
        example: main
        type: string
    type: object
  internal_handlers.ActiveSessionInfo:
    description: Active session information with timing and Claude session details
    properties:
      claude_session_uuid:
        example: abc123-def456-ghi789
        type: string
      ended_at:
        example: "2024-01-15T18:30:00Z"
        type: string
      resumed_at:
        example: "2024-01-15T16:00:00Z"
        type: string
      started_at:
        example: "2024-01-15T14:30:00Z"
        type: string
    type: object
  internal_handlers.AuthStartResponse:
    description: Response when starting GitHub device flow authentication
    properties:
      code:
        example: 1234-5678
        type: string
      status:
        example: waiting
        type: string
      url:
        example: https://github.com/login/device
        type: string
    type: object
  internal_handlers.AuthStatusResponse:
    description: Response containing the current authentication status
    properties:
      error:
        example: authentication timeout
        type: string
      status:
        example: success
        type: string
    type: object
  internal_handlers.CheckoutResponse:
    description: Response containing repository and worktree information after checkout
    properties:
      message:
        example: Repository checked out successfully
        type: string
      repository:
        $ref: '#/definitions/github_com_vanpelt_catnip_internal_models.Repository'
      worktree:
        $ref: '#/definitions/github_com_vanpelt_catnip_internal_models.Worktree'
    type: object
  internal_handlers.ConflictCheckResponse:
    description: Response containing conflict information for sync/merge operations
    properties:
      conflict_files:
        example:
        - '["src/main.go"'
        - ' "README.md"]'
        items:
          type: string
        type: array
      has_conflicts:
        example: true
        type: boolean
      message:
        example: No conflicts detected
        type: string
      operation:
        example: sync
        type: string
      worktree_name:
        example: feature-branch
        type: string
    type: object
  internal_handlers.DeleteSessionResponse:
    description: Response confirming session deletion
    properties:
      message:
        example: Session deleted successfully
        type: string
      workspace:
        example: /workspace/my-project
        type: string
    type: object
  internal_handlers.GitHubRepository:
    description: GitHub repository information from the GitHub API
    properties:
      clone_url:
        example: https://github.com/anthropics/claude-code.git
        type: string
      description:
        example: AI coding assistant
        type: string
      full_name:
        example: anthropics/claude-code
        type: string
      html_url:
        example: https://github.com/anthropics/claude-code
        type: string
      id:
        example: 123456789
        type: integer
      name:
        example: claude-code
        type: string
      private:
        example: false
        type: boolean
    type: object
  internal_handlers.SessionsResponse:
    additionalProperties:
      $ref: '#/definitions/internal_handlers.ActiveSessionInfo'
    description: Map of workspace paths to session information
    type: object
  internal_handlers.UploadResponse:
    description: Response containing upload status and file location
    properties:
      filePath:
        example: /tmp/uploads/document.pdf
        type: string
      message:
        example: File uploaded successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  internal_handlers.WorktreeDiffResponse:
    description: Response containing git diff information for a worktree
    properties:
      additions:
        example: 25
        type: integer
      deletions:
        example: 10
        type: integer
      diff:
        example: diff --git a/main.go b/main.go...
        type: string
      files_changed:
        example:
        - '["main.go"'
        - ' "README.md"]'
        items:
          type: string
        type: array
      summary:
        example: 2 files changed, 25 insertions(+), 10 deletions(-)
        type: string
    type: object
  internal_handlers.WorktreeOperationResponse:
    description: Response for worktree operations like delete, sync, merge, preview
    properties:
      id:
        example: abc123-def456-ghi789
        type: string
      message:
        example: Worktree deleted successfully
        type: string
      strategy:
        example: rebase
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing container PTY sessions and services
  title: Catnip Container API
  version: "1.0"
paths:
  /v1/auth/github/start:
    post:
      description: Initiates GitHub device flow authentication
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.AuthStartResponse'
      summary: Start GitHub authentication
      tags:
      - auth
  /v1/auth/github/status:
    get:
      description: Returns the current status of the authentication flow
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.AuthStatusResponse'
      summary: Get authentication status
      tags:
      - auth
  /v1/claude/session:
    get:
      description: Returns Claude Code session metadata for a specific worktree
      parameters:
      - description: Worktree path
        in: query
        name: worktree_path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_vanpelt_catnip_internal_models.ClaudeSessionSummary'
      summary: Get worktree session summary
      tags:
      - claude
  /v1/claude/sessions:
    get:
      description: Returns Claude Code session metadata for all worktrees with Claude
        data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/github_com_vanpelt_catnip_internal_models.ClaudeSessionSummary'
            type: object
      summary: Get all worktree session summaries
      tags:
      - claude
  /v1/git/branches/{repo_id}:
    get:
      description: Returns a list of remote branches for a specific repository
      parameters:
      - description: Repository ID
        in: path
        name: repo_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Get repository branches
      tags:
      - git
  /v1/git/checkout/{org}/{repo}:
    post:
      consumes:
      - application/json
      description: Clones a GitHub repository as a bare repo and creates initial worktree
      parameters:
      - description: Organization name
        in: path
        name: org
        required: true
        type: string
      - description: Repository name
        in: path
        name: repo
        required: true
        type: string
      - description: Branch name (optional)
        in: query
        name: branch
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.CheckoutResponse'
      summary: Checkout a GitHub repository
      tags:
      - git
  /v1/git/github/repos:
    get:
      description: Returns a list of GitHub repositories accessible to the authenticated
        user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/internal_handlers.GitHubRepository'
            type: array
      summary: List GitHub repositories
      tags:
      - git
  /v1/git/status:
    get:
      description: Returns the current repository and worktree status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_vanpelt_catnip_internal_models.GitStatus'
      summary: Get Git status
      tags:
      - git
  /v1/git/worktrees:
    get:
      description: Returns a list of all worktrees for the current repository
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_vanpelt_catnip_internal_models.Worktree'
            type: array
      summary: List all worktrees
      tags:
      - git
  /v1/git/worktrees/{id}:
    delete:
      description: Removes a worktree from the repository
      parameters:
      - description: Worktree ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.WorktreeOperationResponse'
      summary: Delete worktree
      tags:
      - git
  /v1/git/worktrees/{id}/diff:
    get:
      description: Returns the diff for a worktree against its source branch, including
        all staged/unstaged changes
      parameters:
      - description: Worktree ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.WorktreeDiffResponse'
      summary: Get worktree diff
      tags:
      - git
  /v1/git/worktrees/{id}/merge:
    post:
      consumes:
      - application/json
      description: Merges a local repo worktree's changes back to the main repository
      parameters:
      - description: Worktree ID
        in: path
        name: id
        required: true
        type: string
      - description: Merge options
        in: body
        name: body
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.WorktreeOperationResponse'
      summary: Merge worktree to main
      tags:
      - git
  /v1/git/worktrees/{id}/merge/check:
    get:
      description: Checks if merging a worktree to main would cause conflicts
      parameters:
      - description: Worktree ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.ConflictCheckResponse'
      summary: Check merge conflicts
      tags:
      - git
  /v1/git/worktrees/{id}/preview:
    post:
      description: Creates a preview branch in the main repo for viewing changes outside
        container
      parameters:
      - description: Worktree ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.WorktreeOperationResponse'
      summary: Create worktree preview
      tags:
      - git
  /v1/git/worktrees/{id}/sync:
    post:
      consumes:
      - application/json
      description: Syncs a worktree with its source branch using merge or rebase strategy
      parameters:
      - description: Worktree ID
        in: path
        name: id
        required: true
        type: string
      - description: Sync options
        in: body
        name: body
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.WorktreeOperationResponse'
      summary: Sync worktree with source branch
      tags:
      - git
  /v1/git/worktrees/{id}/sync/check:
    get:
      description: Checks if syncing a worktree would cause merge conflicts
      parameters:
      - description: Worktree ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.ConflictCheckResponse'
      summary: Check sync conflicts
      tags:
      - git
  /v1/pty:
    get:
      description: Establishes a WebSocket connection for terminal access
      parameters:
      - description: Session ID
        in: query
        name: session
        required: true
        type: string
      responses:
        "101":
          description: Switching Protocols
          schema:
            type: string
      summary: Create PTY WebSocket connection
      tags:
      - pty
  /v1/sessions:
    get:
      description: Returns all sessions including ended ones
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.SessionsResponse'
      summary: Get all sessions
      tags:
      - sessions
  /v1/sessions/active:
    get:
      description: Returns all active sessions (not ended)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.SessionsResponse'
      summary: Get active sessions
      tags:
      - sessions
  /v1/sessions/workspace/{workspace}:
    delete:
      description: Removes a session from the active sessions mapping
      parameters:
      - description: Workspace directory path
        in: path
        name: workspace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.DeleteSessionResponse'
      summary: Delete session
      tags:
      - sessions
    get:
      description: Returns session information for a specific workspace directory
      parameters:
      - description: Workspace directory path
        in: path
        name: workspace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.ActiveSessionInfo'
      summary: Get session by workspace
      tags:
      - sessions
  /v1/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload a file to /tmp/uploads directory with automatic conflict
        resolution
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_handlers.UploadResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_handlers.UploadResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_handlers.UploadResponse'
      summary: Upload a file
      tags:
      - upload
schemes:
- http
- ws
swagger: "2.0"
