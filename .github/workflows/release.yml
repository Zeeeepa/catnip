name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  # packages: write  # Not needed without Docker images

jobs:
  goreleaser:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache-dependency-path: container/go.sum

      #- name: Import Code-Signing Certificates
      #  uses: Apple-Actions/import-codesign-certs@v3
      #  with:
      #    p12-file-base64: ${{ secrets.CERT_P12_BASE64 }}
      #    p12-password: ${{ secrets.CERT_PASSWORD }}

      # Docker setup removed - focusing on binaries only for catnip
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Log in to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      - name: Change to container directory
        run: cd container

      - name: Install Wrangler
        run: npm install -g wrangler

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: "~> v2"
          args: release --clean
          workdir: container
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          APPLE_ID: ${{ vars.APPLE_ID }}
          APPLE_SIGN_P12: ${{ secrets.CERT_P12_BASE64 }}
          APPLE_SIGN_PASSWORD: ${{ secrets.CERT_PASSWORD }}
          APPLE_KEY_ID: ${{ vars.APPLE_KEY_ID }}
          APPLE_PRIVATE_KEY: ${{ secrets.APPLE_PRIVATE_KEY }}
          APPLE_ISSUER_ID: ${{ vars.APPLE_ISSUER_ID }}
          APPLE_TEAM_ID: ${{ vars.APPLE_TEAM_ID }}

          # HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}  # Disabled for now
          # SCOOP_BUCKET_GITHUB_TOKEN: ${{ secrets.SCOOP_BUCKET_GITHUB_TOKEN }}  # Disabled for now

      - name: Upload release assets to R2
        run: |
          chmod +x .github/scripts/upload-to-r2.sh
          env
          .github/scripts/upload-to-r2.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          R2_BUCKET_NAME: ${{ vars.R2_BUCKET_NAME }}
