name: Test Go

on:
  push:
    paths:
      - "container/**"
      - ".github/workflows/test-go.yml"

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest] # TODO: windows-latest fails tests for some reason, one day maybe...
        go-version: ["1.24"]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: container/go.sum

      - name: Download dependencies
        run: go mod download
        working-directory: container

      - name: Run tests with coverage
        run: go test -v -coverprofile=coverage.out -covermode=atomic ./...
        working-directory: container

      - name: Display coverage summary
        run: |
          echo "## Coverage Summary" >> $GITHUB_STEP_SUMMARY
          go tool cover -func=coverage.out >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          COVERAGE=$(go tool cover -func=coverage.out | grep "total:" | awk '{print $3}')
          echo "**Total Coverage: $COVERAGE**" >> $GITHUB_STEP_SUMMARY
        working-directory: container

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.24'
        with:
          file: container/coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Coverage Badge
        uses: tj-actions/coverage-badge-go@v2
        if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.24'
        with:
          filename: container/coverage.out

      - name: Run go vet
        run: go vet ./...
        working-directory: container

      - name: Build CLI
        run: go build -o bin/catctrl ./cmd/cli/main.go
        working-directory: container

      - name: Build Server
        run: go build -o bin/catnip ./cmd/server/main.go
        working-directory: container

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache-dependency-path: container/go.sum

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8.0.0
        with:
          version: latest
          working-directory: container
          args: --verbose

  goreleaser-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache-dependency-path: container/go.sum

      - name: Check GoReleaser config
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: check
          workdir: container
